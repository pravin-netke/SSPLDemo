package com.sspl.demo.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DashboardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDashboardAllPropertiesEquals(Dashboard expected, Dashboard actual) {
        assertDashboardAutoGeneratedPropertiesEquals(expected, actual);
        assertDashboardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDashboardAllUpdatablePropertiesEquals(Dashboard expected, Dashboard actual) {
        assertDashboardUpdatableFieldsEquals(expected, actual);
        assertDashboardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDashboardAutoGeneratedPropertiesEquals(Dashboard expected, Dashboard actual) {
        assertThat(expected)
            .as("Verify Dashboard auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDashboardUpdatableFieldsEquals(Dashboard expected, Dashboard actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDashboardUpdatableRelationshipsEquals(Dashboard expected, Dashboard actual) {}
}
